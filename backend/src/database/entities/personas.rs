//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "personas")]
pub struct Model {
    pub nombre: String,
    pub apellido_1: String,
    pub apellido_2: String,
    #[sea_orm(primary_key, auto_increment = false)]
    pub rut: String,
    #[sea_orm(unique)]
    pub print_path: String,
    #[sea_orm(unique)]
    pub correo_uai: String,
    pub is_disabled: bool,
    pub rol: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::registros::Entity")]
    Registros,
}

impl Related<super::registros::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Registros.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
